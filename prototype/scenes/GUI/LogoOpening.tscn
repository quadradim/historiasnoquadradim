[gd_scene load_steps=5 format=2]

[ext_resource path="res://assets/Images/Temp-Logo.png" type="Texture" id=1]
[ext_resource path="res://scripts/LogoOpening.gd" type="Script" id=2]

[sub_resource type="Animation" id=1]
resource_name = "logo_fade_in"
length = 2.5
tracks/0/type = "value"
tracks/0/path = NodePath("TransitionLayer/Background:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 0 ) ]
}

[sub_resource type="Animation" id=2]
resource_name = "logo_fade_out"
length = 2.5
tracks/0/type = "value"
tracks/0/path = NodePath("TransitionLayer/Background:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 0, 0, 0, 1 ) ]
}

[node name="LogoOpening" type="Node2D"]
script = ExtResource( 2 )

[node name="LogoLayer" type="CanvasLayer" parent="."]

[node name="Background" type="ColorRect" parent="LogoLayer"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.929412, 0.92549, 0.898039, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Logo" type="Sprite" parent="LogoLayer"]
position = Vector2( 488, 304 )
scale = Vector2( 0.576555, 0.576555 )
texture = ExtResource( 1 )

[node name="Duration" type="Timer" parent="LogoLayer"]
wait_time = 4.0
one_shot = true
autostart = true

[node name="TransitionLayer" type="CanvasLayer" parent="."]
layer = 2

[node name="Background" type="ColorRect" parent="TransitionLayer"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 1, 1, 1, 0 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TransitionAnimation" type="AnimationPlayer" parent="."]
anims/logo_fade_in = SubResource( 1 )
anims/logo_fade_out = SubResource( 2 )

[connection signal="timeout" from="LogoLayer/Duration" to="." method="_on_Duration_timeout"]
[connection signal="animation_finished" from="TransitionAnimation" to="." method="_on_TransitionAnimation_animation_finished"]
